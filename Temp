import pandas as pd
import matplotlib.pyplot as plt

# --- 1.  prepare the daily table (already done) ------------------------------
# df_daily_avg has:   prod_day_start (datetime64[ns])   error_avg (float)

df = (
    df_daily_avg
    .sort_values('prod_day_start')          # chronological order
    .reset_index(drop=True)
)

# --- 2.  detect gaps of ≥ 2 days --------------------------------------------
df['day_diff'] = df['prod_day_start'].diff().dt.days.fillna(1).astype(int)
gap_locs = df.index[df['day_diff'] >= 2].tolist()    # row indices *after* a gap

# --- 3.  compress the timeline (remove missing days) ------------------------
df['plot_x'] = range(len(df))               # 0, 1, 2, …   ← compressed axis

# --- 4.  draw ----------------------------------------------------------------
fig, ax = plt.subplots(figsize=(12, 5))

ax.plot(df['plot_x'], df['error_avg'],
        marker='o', linewidth=1.5, label='mean error')

# mark every compressed‑out gap
for loc in gap_locs:
    ax.axvline(loc - 0.5, color='red', linestyle='--', linewidth=1)

# cosmetic touches
ax.set_xticks(df['plot_x'])
ax.set_xticklabels(df['prod_day_start'].dt.strftime('%Y‑%m‑%d'),
                   rotation=45, ha='right')
ax.set_xlabel('Production day (07:00 – 06:59)')
ax.set_ylabel('Error (daily average)')
ax.set_title('Daily mean error (gaps ≥ 2 days compressed)')
ax.grid(True, axis='y', alpha=.3)
plt.tight_layout()
plt.show()
